{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '43842953-9dbca6afb64f09675f00184b1';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport const getImages = (searchValue = '') => {\n  return fetch(\n    `${BASE_URL}?key=${API_KEY}&q=${encodeURIComponent(\n      searchValue\n    )}&image_type=photo&orientation=horizontal&safesearch=true`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};","export const renderImages = (blockToinsertedHtml, imagesArr) => {\n  const markup = imagesArr\n    .map(\n      ({\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n        webformatURL,\n        largeImageURL,\n      }) => {\n        return `\n        <li class=\"gallery-item\">\n          <a class=\"gallery-link\" href=\"${largeImageURL}\" >\n            <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" />\n            <ul class=\"stats-block\">\n              <li>\n                <span>Likes</span>\n                <span>${likes}</span>\n              </li>\n              <li>\n                <span>Views</span>\n                <span>${views}</span>\n              </li>\n              <li>\n                <span>Comments</span>\n                <span>${comments}</span>\n              </li>\n              <li>\n                <span>Downloads</span>\n                <span>${downloads}</span>\n              </li>\n            </ul>\n          </a>\n        </li>\n        `;\n      }\n    )\n    .join('');\n\n  blockToinsertedHtml.insertAdjacentHTML('beforeend', markup);\n};","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { getImages } from './js/pixabay-api';\nimport { renderImages } from './js/render-functions';\n\nconst searchInput = document.querySelector('input[class=\"search-input\"]');\nconst form = document.querySelector('form[class=\"search\"]');\nconst gallerySection = document.querySelector(\n  'section[class=\"gallery-section\"]'\n);\nconst loaderHtml = '<div id=\"loader\" class=\"loader\"></div>';\nconst imgBlock = document.querySelector('ul[class=\"gallery\"]');\nlet images = [];\n\nconst lightboxOptions = {\n  captionsData: 'alt',\n  captionDelay: 250,\n};\n\nconst lightbox = new SimpleLightbox('ul.gallery a', lightboxOptions);\n\nconst toastErrorSettings = {\n  position: 'topRight',\n  messageColor: '#ffffff',\n  timeout: 5000,\n  radius: 15,\n  backgroundColor: '#FF2E2E',\n};\n\nconst handleSubmit = async event => {\n  event.preventDefault();\n\n  images = [];\n  imgBlock.textContent = '';\n\n  const form = event.target;\n  const input = searchInput.value.trim();\n\n  if (input === '') {\n    iziToast.error({\n      ...toastErrorSettings,\n      message: 'The request must not be empty!',\n    });\n    return;\n  }\n\n  try {\n    gallerySection.insertAdjacentHTML('beforebegin', loaderHtml);\n    const imagesData = await getImages(input);\n\n    const loader = document.querySelector('#loader');\n    if (loader) {\n      loader.remove();\n    }\n\n    if (imagesData !== null && imagesData.hits.length > 0) {\n      images = [...imagesData.hits];\n\n      renderImages(imgBlock, images);\n\n      lightbox.refresh();\n    } else {\n      iziToast.error({\n        ...toastErrorSettings,\n        message:\n          'Sorry, there are no images matching your search query. Please, try again again!',\n      });\n    }\n  } catch (error) {\n    console.error('Error fetching images:', error);\n  }\n\n  form.reset();\n};\n\nform.addEventListener('submit', handleSubmit);"],"names":["API_KEY","BASE_URL","getImages","searchValue","response","renderImages","blockToinsertedHtml","imagesArr","markup","tags","likes","views","comments","downloads","webformatURL","largeImageURL","searchInput","form","gallerySection","loaderHtml","imgBlock","images","lightboxOptions","lightbox","SimpleLightbox","toastErrorSettings","handleSubmit","event","input","iziToast","imagesData","loader","error"],"mappings":"6vBAAA,MAAMA,EAAU,qCACVC,EAAW,2BAEJC,EAAY,CAACC,EAAc,KAC/B,MACL,GAAGF,CAAQ,QAAQD,CAAO,MAAM,mBAC9BG,CACD,CAAA,0DACL,EAAI,KAAKC,GAAY,CACjB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACpB,CAAG,ECbUC,EAAe,CAACC,EAAqBC,IAAc,CAC9D,MAAMC,EAASD,EACZ,IACC,CAAC,CACC,KAAAE,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,EACA,aAAAC,EACA,cAAAC,CACR,IACe;AAAA;AAAA,0CAE2BA,CAAa;AAAA,8CACTD,CAAY,UAAUL,CAAI;AAAA;AAAA;AAAA;AAAA,wBAIhDC,CAAK;AAAA;AAAA;AAAA;AAAA,wBAILC,CAAK;AAAA;AAAA;AAAA;AAAA,wBAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,wBAIRC,CAAS;AAAA;AAAA;AAAA;AAAA;AAAA,SAO5B,EACA,KAAK,EAAE,EAEVP,EAAoB,mBAAmB,YAAaE,CAAM,CAC5D,EClCMQ,EAAc,SAAS,cAAc,6BAA6B,EAClEC,EAAO,SAAS,cAAc,sBAAsB,EACpDC,EAAiB,SAAS,cAC9B,kCACF,EACMC,EAAa,yCACbC,EAAW,SAAS,cAAc,qBAAqB,EAC7D,IAAIC,EAAS,CAAA,EAEb,MAAMC,EAAkB,CACtB,aAAc,MACd,aAAc,GAChB,EAEMC,EAAW,IAAIC,EAAe,eAAgBF,CAAe,EAE7DG,EAAqB,CACzB,SAAU,WACV,aAAc,UACd,QAAS,IACT,OAAQ,GACR,gBAAiB,SACnB,EAEMC,EAAe,MAAMC,GAAS,CAClCA,EAAM,eAAc,EAEpBN,EAAS,CAAA,EACTD,EAAS,YAAc,GAEvB,MAAMH,EAAOU,EAAM,OACbC,EAAQZ,EAAY,MAAM,KAAI,EAEpC,GAAIY,IAAU,GAAI,CAChBC,EAAS,MAAM,CACb,GAAGJ,EACH,QAAS,gCACf,CAAK,EACD,MACD,CAED,GAAI,CACFP,EAAe,mBAAmB,cAAeC,CAAU,EAC3D,MAAMW,EAAa,MAAM5B,EAAU0B,CAAK,EAElCG,EAAS,SAAS,cAAc,SAAS,EAC3CA,GACFA,EAAO,OAAM,EAGXD,IAAe,MAAQA,EAAW,KAAK,OAAS,GAClDT,EAAS,CAAC,GAAGS,EAAW,IAAI,EAE5BzB,EAAae,EAAUC,CAAM,EAE7BE,EAAS,QAAO,GAEhBM,EAAS,MAAM,CACb,GAAGJ,EACH,QACE,iFACV,CAAO,CAEJ,OAAQO,EAAO,CACd,QAAQ,MAAM,yBAA0BA,CAAK,CAC9C,CAEDf,EAAK,MAAK,CACZ,EAEAA,EAAK,iBAAiB,SAAUS,CAAY"}